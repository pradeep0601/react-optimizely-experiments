{"version":3,"sources":["PurchaseButton.js","App.js","reportWebVitals.js","index.js"],"names":["PurchaseButton","props","onClick","optimizely","console","log","track","setState","isPurchased","state","this","Component","createInstance","sdkKey","WrappedPurchaseButton","withOptimizely","userAgent","window","navigator","userId","shortUuid","generate","App","user","id","attributes","browser","className","feature","enabled","variables","amount","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8SAiCiBA,G,wDA9Bf,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAKNC,QAAU,WAAO,IACPC,EAAe,EAAKF,MAApBE,WAERC,QAAQC,IAAI,2BACZF,EAAWG,MAAM,YACjB,EAAKC,SAAS,CACZC,aAAc,EAAKC,MAAMD,eAV7B,EAAKC,MAAQ,CACXD,aAAa,GAHE,E,qDAiBf,OACE,gCACEE,KAAKD,MAAMD,aAAe,qDAC3B,wBAAQN,QAASQ,KAAKR,QAAtB,6B,GArBoBS,cCWvBR,EAAaS,yBAAe,CAChCC,OAAQ,0BAGJC,EAAwBC,yBAAef,GAEvCgB,EAAYC,OAAOC,UAAUF,UACnCZ,QAAQC,IAAI,uBAAwBW,GACpC,IAAMG,EAAM,mBAAeC,IAAUC,YACrCjB,QAAQC,IAAI,mBAAoBc,G,IAiCjBG,E,uKA9Bb,OACE,cAAC,qBAAD,CACAnB,WAAcA,EACdoB,KAAM,CACJC,GAAIL,EACJM,WAAY,CACVC,QAAS,CAACV,eALd,SASA,qBAAKW,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,yDACA,4BACE,cAAC,oBAAD,CAAmBC,QAAU,WAA7B,SACG,SAACC,EAASC,GAAV,OACCD,EAAO,qBAAiBC,EAAUC,QAAU,6CAIlD,4BACA,cAACjB,EAAD,iB,GAvBUH,aCXHqB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.298b7b77.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass PurchaseButton extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isPurchased: false\r\n    }\r\n  }\r\n    onClick = () => {\r\n      const { optimizely } = this.props\r\n      // after weâ€™ve confirmed purchase completed\r\n      console.log('====Purchase clicked===');\r\n      optimizely.track('purchase');\r\n      this.setState({\r\n        isPurchased: !this.state.isPurchased\r\n      })\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <div>\r\n         {this.state.isPurchased && <p>You baught a product</p>}\r\n         <button onClick={this.onClick}>\r\n           Purchase\r\n         </button>\r\n        </div>\r\n        \r\n      )\r\n    }\r\n  }\r\n  \r\n  \r\n  export default PurchaseButton;","import React, {Component} from 'react';\r\nimport shortUuid from 'short-uuid'\r\nimport {\r\n  createInstance,\r\n  OptimizelyFeature,\r\n  OptimizelyProvider,\r\n  withOptimizely,\r\n} from '@optimizely/react-sdk';\r\n\r\nimport './App.css';\r\n\r\nimport PurchaseButton from './PurchaseButton';\r\n\r\nconst optimizely = createInstance({\r\n  sdkKey: '8HHXZSoTB6TznYceH6Scr'\r\n});\r\n\r\nconst WrappedPurchaseButton = withOptimizely(PurchaseButton)\r\n\r\nconst userAgent = window.navigator.userAgent\r\nconsole.log('=========userAgent: ', userAgent);\r\nconst userId = `testuser-${shortUuid.generate()}`;\r\nconsole.log('========userId: ', userId);\r\nclass App extends Component {\r\n  render() {\r\n  return (\r\n    <OptimizelyProvider\r\n    optimizely = {optimizely}\r\n    user={{\r\n      id: userId,\r\n      attributes: {\r\n        browser: {userAgent}\r\n      }\r\n    }}\r\n    >\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <h2>Optimizely Feature Test</h2>\r\n        <p>\r\n          <OptimizelyFeature feature = 'discount'>\r\n            {(enabled, variables) => (\r\n              enabled ? `Discount: $${variables.amount}`: 'Discount: No discount, Regular price.'\r\n            )}\r\n          </OptimizelyFeature>\r\n        </p>\r\n        <p>\r\n        <WrappedPurchaseButton></WrappedPurchaseButton>\r\n        </p>\r\n      </header>\r\n    </div>\r\n    </OptimizelyProvider>\r\n  )\r\n  };\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}